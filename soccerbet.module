<?php
/**
* @file
* A description of what your module does.
*/

use Drupal\Component\Utility\Html;
use Drupal\Core\Entity\ContentEntityType;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Url;

/**
 * Implements hook_toolbar().
 */
function soccerbet_toolbar(): array {
  // First, build an array of all example modules and their routes.
  // We resort to this hard-coded way so as not to muck up each example.
  $soccerbet_entities = _soccerbet_toolbar_routes();

  // Build a list of links for the menu.
  $links = [];
  foreach ($soccerbet_entities as $entity => $route) {

    // Check if entity is installed or not.

    $entity_type_definitions = Drupal::entityTypeManager()->getDefinitions();

    /* @var $definition EntityTypeInterface */
    $definition = $entity_type_definitions[$entity];
    if ($definition instanceof ContentEntityType) {
    //if (\Drupal::moduleHandler()->moduleExists($entity)) {

      // Get the Entity info (title, description) from Drupal.
      //$info = \Drupal::service('extension.list.module')->getExtensionInfo($entity);

      // If there's no info, the example isn't enabled, so don't display it.
      /*if (!empty($info)) {
        $links[$entity] = [
          'title' => Html::escape($info['name']),
          'url' => Url::fromRoute($route),
          'attributes' => [
            'class' => [Html::getClass($entity)],
            'title' => Html::escape($info['description']),
          ],
        ];
      }*/
      $links[$entity] = [
        'title' => Html::escape($definition->getLabel()),
        'url' => Url::fromRoute($route),
        'attributes' => [
          'class' => [Html::getClass($entity)],
          'title' => Html::escape('description'),
        ],

      ];
    }
  }
  //Create the link for the Soccerbet settings form
  array_unshift($links, [
    'title' => Html::escape('Soccerbet settings'),
    'url' => Url::fromRoute('soccerbet.soccerbet_settings'),
    'attributes' => [
      'class' => ['soccerbet'],
      'title' => t('Soccerbet Settings'),
    ],
  ]);

  // Create the examples toolbar render array.
  $items['soccerbet'] = [
    '#type' => 'toolbar_item',
    'tab' => [
      '#type' => 'link',
      '#title' => t('Soccerbet'),
      '#url' => Url::fromRoute('<front>'),
      '#attributes' => [
        'title' => t('Soccerbet'),
        'class' => ['toolbar-icon', 'toolbar-icon-soccerbet'],
      ],
    ],
    'tray' => [
      '#heading' => t('Soccerbet'),
      'shortcuts' => [
        '#theme' => 'links__toolbar_soccerbet',
        '#links' => $links,
        '#attributes' => [
          'class' => ['toolbar-menu'],
        ],
      ],
    ],
    '#weight' => 99,
    '#attached' => [
      'library' => [
        'soccerbet/soccerbet-icons',
      ],
    ],
  ];

  return $items;
}

/**
 * Get a list of toolbar links to provide.
 *
 * We've factored this list into a function so that we can use it to test
 * toolbar routes.
 *
 * This function is for internal use.
 *
 * @return string[]
 *   Keyed array of toolbar routes. Keys are the module name which supplies the
 *   route.
 */
function _soccerbet_toolbar_routes(): array {
  return [
    'soccerbet_tournament' => 'entity.soccerbet_tournament.collection',
    'soccerbet_team' => 'entity.soccerbet_team.collection',
  ];
}

/**
 * Implements hook_theme().
 */
function soccerbet_theme($existing, $type, $theme, $path): array {
  return [
    'soccerbet_tournament' => [
      'path' => $path . '/templates',
      'template' => 'soccerbet-tournament',
      'render element' => 'elements',
    ],
    'soccerbet_team' => [
      'render element' => 'elements',
    ],
    'soccerbet_team_title' => [
      'variables' => [
        'entity' => NULL,
        'flag' => NULL,
        'attributes' => [],
        'link_options' => [],
      ]
    ]
  ];
}

/**
 * Prepares variables for the soccerbet-team title
 *
 * @param array $variables
 *
 * @return void
 * @throws \Drupal\Core\Entity\EntityMalformedException
 */
function template_preprocess_soccerbet_team_title(array &$variables): void {
  /* @var $entity \Drupal\soccerbet\Entity\SoccerbetTeamInterface */
  $entity = $variables['entity'];
  $module_path = Drupal::service('extension.list.module')->getPath('soccerbet');
  $variables['link_path'] = $entity->toUrl();
  //$url = Url::fromUri($entity->toUrl());
  $variables['title'] = $entity->getTitle();
  //$variables['flag'] = file_get_contents($module_path . '/flags/svg/' . strtolower($entity->getTeamNameCode()) . '.svg');
  $variables['attributes']['class'][] = 'soccerbet-team-title';
  $variables['flagclass'] = 'bg-' . $entity->getTeamNameCode();
  if (isset($variables['link_path'])) {
    $variables['attributes']['href'] =  Url::fromRoute('entity.soccerbet_team.canonical' , ['soccerbet_team' => $entity->id()])->toString();
    //$variables['attributes']['class'][] = 'soccerbet-team-title';//
    //$variables['attributes']['class'][] = strtolower($entity->getTeamNameCode());//
  }
}

/**
 * Prepares variables for the tournament template.
 *
 * Default template: tournament.html.twig
 *
 * @param array $variables
 *   - elements: An array of elements to display in view mode.
 *   - tournament: The group object.
 *   - view_mode: View mode; e.g., 'full', 'teaser', etc.
 */
function template_preprocess_tournament(&$variables) {
  kint($variables['elements']['#tournament']);
}